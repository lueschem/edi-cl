---
- name: Ensure a EBS template is set.
  assert: { that: "ebs_template is defined" }

- name: Ensures edi-boot-shim config.d directory exists.
  file:
    path: /etc/edi-boot-shim/edi-boot-shim.cfg.d
    state: directory

- name: Configure edi-boot-shim for multiboot.
  template:
    src: multiboot.cfg
    dest: /etc/edi-boot-shim/edi-boot-shim.cfg.d

- name: Install edi-boot-shim and its u-boot dependency.
  apt:
    name: "{{ item }}"
    install_recommends: no
  loop:
  - edi-boot-shim
  - u-boot-tools

- name: Create boot firmware directory.
  file:
    path: "{{ uboot_location }}"
    state: directory

- name: Copy the raw boot script to the boot folder.
  copy:
    src: boot.scr.txt
    dest: "{{ uboot_location }}"

- name: Create boot script.
  command: mkimage -A arm -T script -O linux -d boot.scr.txt boot.scr
  args:
    chdir: "{{ uboot_location }}"
    creates: "{{ uboot_location }}/boot.scr"

- name: Create u-boot directory on data partition.
  file:
    path: /data/u-boot
    state: directory

- name: Configure u-boot-tools.
  copy:
    src: fw_env.config.{{ mender_device_type }}
    dest: /data/u-boot/fw_env.config

- name: Create symbolic link for the u-boot-tools config.
  file:
    src: "/data/u-boot/fw_env.config"
    dest: "/etc/fw_env.config"
    state: link

- name: Copy fstab.
  copy:
    src: fstab
    dest: /etc/

- name: Copy data and boot/firmware mount units.
  copy:
    src: "{{ item }}"
    dest: /lib/systemd/system/
  loop:
    - data.mount
    - boot-firmware.mount

- name: Add helper script that unlocks the boot partition for fw_setenv.
  copy:
    src: fw_setenv
    dest: /usr/sbin/
    mode: 0755

